worker_processes auto;

events { worker_connections 1024; }

http {
    upstream webserver {
        keepalive 20;
        server apache:80;
    }

    upstream pythia_proxy {
        keepalive 20;
        server pythia:8080;
    }

    proxy_cache_path /cache-data/assetscache.cache keys_zone=assetscache:10m levels=1:2 inactive=86400s max_size=1000m;
    proxy_cache_path /cache-data/microcache.cache levels=1:2 keys_zone=microcache:5m max_size=100m;

    real_ip_header X-Real-IP;

    limit_req_zone $binary_remote_addr zone=admin:20m rate=180r/m;
    limit_req_zone $binary_remote_addr zone=admin_flood:20m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=web:20m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=assets:20m rate=5r/s;

    server {
        client_max_body_size 50M;

        location /assets {
            limit_req zone=assets burst=150 nodelay;
            proxy_cache assetscache;
            proxy_cache_lock on;
            proxy_cache_valid 200 1s;
            proxy_cache_use_stale updating;

            # first 5MB without limit, then 500kb/s
            limit_rate_after 5000k;
            limit_rate       500k;
            proxy_buffering  on;

            # Set files larger than 10M to stream rather than cache
            proxy_max_temp_file_size 10M;

            # cache valid HTTP 200 responses for 1 second
            proxy_cache_valid 200 60s;
            # cache invalid HTTP 404 responses for 5 second
            proxy_cache_valid 404 10s;
            # cache invalid HTTP 500 responses for 1 second
            proxy_cache_valid 500 1s;

            access_log    off;
            log_not_found off;

            proxy_set_header Host      $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_pass       http://webserver;
            proxy_hide_header       Set-Cookie;
            proxy_ignore_headers    Set-Cookie;
            # important! Remember the special inheritance rules for proxy_set_header:
            # http://nginx.org/ru/docs/http/ngx_http_proxy_module.html#proxy_set_header
            proxy_set_header        Cookie "";
        }

        location ~ ^/admin\.php {
            limit_req zone=admin burst=50;
            limit_req zone=admin_flood burst=50;

            proxy_set_header Host      $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_pass       http://webserver;
        }

        location /pythia {
            limit_req zone=web burst=10;

            proxy_set_header Host      $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_pass       http://pythia_proxy/; # manter o / no final aqui, pois ele Ã© importante!
        }

        location / {
            limit_req zone=web burst=150;

            # Point nginx to the real app/web server
            # Set cache zone
            #proxy_cache microcache;
            #add_header X-Cache-Status $upstream_cache_status;

            #proxy_cache_lock on;

            # Set cache key to include identifying components
            #proxy_cache_key $scheme$host$request_method$request_uri;
            # cache valid HTTP 200 responses for 1 second
            #proxy_cache_valid 200 1s;
            # cache invalid HTTP 404 responses for 5 second
            #proxy_cache_valid 404 5s;
            # cache invalid HTTP 500 responses for 1 second
            #proxy_cache_valid 500 1s;

            # Serve from cache if currently refreshing
            #proxy_cache_use_stale updating;
            # Send appropriate headers through

            proxy_set_header Host      $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_pass       http://webserver;

            #proxy_hide_header       Set-Cookie;
            #proxy_ignore_headers    Set-Cookie;
            # important! Remember the special inheritance rules for proxy_set_header:
            # http://nginx.org/ru/docs/http/ngx_http_proxy_module.html#proxy_set_header

            #proxy_hide_header Cache-Control;
            #proxy_hide_header Pragma;
            #proxy_hide_header Expires;

            #proxy_ignore_headers Cache-Control;
            #proxy_ignore_headers Expires;

            #proxy_set_header Cookie "";
        }

    }
}
