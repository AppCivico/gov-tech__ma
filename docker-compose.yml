version: '3.3'

services:
  redis:
    container_name: ma_redis
    image: docker.io/bitnami/redis:6.2
    environment:
      - ALLOW_EMPTY_PASSWORD=${REDIS_ALLOW_EMPTY_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
        - cache
    volumes:
      - ${REDIS_STORAGE}:/bitnami/redis/data
    logging:
      driver: "json-file"
      options:
        max-file: "${LOG_MAX_FILE}"
        max-size: "${LOG_MAX_SIZE}"
  db:
    container_name: ma_gov_mariadb
    image: mariadb:10.5.10-focal
    volumes:
        - ${MYSQL_DATA}:/var/lib/mysql
    environment:
        MYSQL_DATABASE: "${DATABASE_NAME}"
        MYSQL_USER: "${DATABASE_USER}"
        MYSQL_PASSWORD: "${DATABASE_PASSWORD}"
        MYSQL_ROOT_PASSWORD: "${DATABASE_ROOT_PASSWORD}"
    networks:
        - database
    logging:
      driver: "json-file"
      options:
        max-file: "${LOG_MAX_FILE}"
        max-size: "${LOG_MAX_SIZE}"
    restart: unless-stopped
  apache:
    build: ./docker/apache/
    volumes:
      - ${GOV_MA_UPLOAD_DIR}:/var/www/versions/current-version/html/uploads/
      - ${GOV_MA_SERVER_BASE_DIR}:/var/www/versions/
    logging:
      driver: "json-file"
      options:
        max-file: "${LOG_MAX_FILE}"
        max-size: "${LOG_MAX_SIZE}"
    restart: unless-stopped
    environment:
        REDIS_PASSWORD: ${REDIS_PASSWORD}
        MYSQL_DATABASE: "${DATABASE_NAME}"
        MYSQL_USER: "${DATABASE_USER}"
        MYSQL_PASSWORD: "${DATABASE_PASSWORD}"
        MYSQL_ROOT_PASSWORD: "${DATABASE_ROOT_PASSWORD}"
    depends_on:
      - db
      - redis
    networks:
      - cms
      - cache
      - database
      - dialogflow
  nginx:
    build: ./docker/nginx/
    container_name: ma_gov_web
    depends_on:
      - apache
    logging:
      driver: "json-file"
      options:
        max-file: "${LOG_MAX_FILE}"
        max-size: "${LOG_MAX_SIZE}"
    volumes:
      - ${NGINX_STORAGE}:/cache-data
    networks:
      - cms
    restart: unless-stopped
    ports:
      - ${NGINX_BIND_ADDRESS}:80
  # pythia:
  #   build:
  #     context: ./docker/pythia
  #     args:
  #       - AUTH_FOLDER_INSIDE_CONTAINER=${AUTH_FOLDER_INSIDE_CONTAINER}
  #       - JSON_KEY_FILENAME=${JSON_KEY_FILENAME}
  #   container_name: dialogflow_proxy_api
  #   environment:
  #     PORT: 8080
  #     GOOGLE_APPLICATION_CREDENTIALS: ${AUTH_FOLDER_INSIDE_CONTAINER}${JSON_KEY_FILENAME}
  #     GOOGLE_CLOUD_PROJECT_NAME: ${GOOGLE_CLOUD_PROJECT_NAME}
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-file: "${LOG_MAX_FILE}"
  #       max-size: "${LOG_MAX_SIZE}"
  #   restart: unless-stopped
  #   ports:
  #     - ${DIALOGFLOW_PROXY_API_BIND_ADDRESS}:8080

networks:
    cache:
      driver: bridge
    cms:
      driver: bridge
    database:
      driver: bridge
    dialogflow:
      driver: bridge
